from collections import deque

class Solution:
    def numIslands(self, grid) -> int:
        directions = [(0, 1), (0, -1), (1, 0), (-1, 0)]
        
        n = len(grid)
        m = len(grid[0])
        
        def bfs(row, col):
            bfsStack = deque()
            bfsStack.append((row,col))
            print(bfsStack)
            while bfsStack:
                size = len(bfsStack)
                
                for i in range(size):
                    row, col = bfsStack.popleft()
                    
                    grid[row][col] = "0"
                    
                    for d in directions:
                        new_row = row + d[0]
                        new_col = col + d[1]
                        
                        if new_row >= 0 and new_col >= 0 and new_row < n and new_col < m and grid[new_row][new_col] == "1":
                            bfsStack.append((new_row, new_col))
                print(bfsStack)
        
        count = 0
        
        for i in range(n):
            for j in range(m):
                if grid[i][j] == "1":
                    count += 1
                    bfs(i, j)
                    
        return count

obj = Solution()

grid = [["1","1","1","1","1","0","1","1","1","1","1","1","1","1","1","0","1","0","1","1"],["0","1","1","1","1","1","1","1","1","1","1","1","1","0","1","1","1","1","1","0"],["1","0","1","1","1","0","0","1","1","0","1","1","1","1","1","1","1","1","1","1"],["1","1","1","1","0","1","1","1","1","1","1","1","1","1","1","1","1","1","1","1"],["1","0","0","1","1","1","1","1","1","1","1","1","1","1","1","1","1","1","1","1"],["1","0","1","1","1","1","1","1","0","1","1","1","0","1","1","1","0","1","1","1"],["0","1","1","1","1","1","1","1","1","1","1","1","0","1","1","0","1","1","1","1"],["1","1","1","1","1","1","1","1","1","1","1","1","0","1","1","1","1","0","1","1"],["1","1","1","1","1","1","1","1","1","1","0","1","1","1","1","1","1","1","1","1"],["1","1","1","1","1","1","1","1","1","1","1","1","1","1","1","1","1","1","1","1"],["0","1","1","1","1","1","1","1","0","1","1","1","1","1","1","1","1","1","1","1"],["1","1","1","1","1","1","1","1","1","1","1","1","1","1","1","1","1","1","1","1"],["1","1","1","1","1","1","1","1","1","1","1","1","1","1","1","1","1","1","1","1"],["1","1","1","1","1","0","1","1","1","1","1","1","1","0","1","1","1","1","1","1"],["1","0","1","1","1","1","1","0","1","1","1","0","1","1","1","1","0","1","1","1"],["1","1","1","1","1","1","1","1","1","1","1","1","0","1","1","1","1","1","1","0"],["1","1","1","1","1","1","1","1","1","1","1","1","1","0","1","1","1","1","0","0"],["1","1","1","1","1","1","1","1","1","1","1","1","1","1","1","1","1","1","1","1"],["1","1","1","1","1","1","1","1","1","1","1","1","1","1","1","1","1","1","1","1"],["1","1","1","1","1","1","1","1","1","1","1","1","1","1","1","1","1","1","1","1"]]

print(obj.numIslands(grid))
